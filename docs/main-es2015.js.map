{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/ngx-red-zoom/__ivy_ngcc__/fesm2015/ngx-red-zoom.js","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/documentation/documentation.component.ts","./src/app/documentation/documentation.component.html","./src/app/example-n01/example-n01.component.ts","./src/app/example-n01/example-n01.component.html","./src/app/example-n02/example-n02.component.ts","./src/app/example-n02/example-n02.component.html","./src/app/example-n03/example-n03.component.ts","./src/app/example-n03/example-n03.component.html","./src/app/example-n04/example-n04.component.ts","./src/app/example-n04/example-n04.component.html","./src/app/example-n05/example-n05.component.ts","./src/app/example-n05/example-n05.component.html","./src/app/example-n06/example-n06.component.ts","./src/app/example-n06/example-n06.component.html","./src/app/example-n07/example-n07.component.ts","./src/app/example-n07/example-n07.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACgF;AACxE;;AAEZ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA;AACA,yDAAyD,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,0DAA0D,4BAA4B;AACtF,0DAA0D,6BAA6B;AACvF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa,yEAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa,yEAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { __decorate, __param } from 'tslib';\nimport { ElementRef, Renderer2, NgZone, Inject, PLATFORM_ID, Input, HostBinding, Directive, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nconst ɵ0 = () => {\r\n    let template = null;\r\n    return () => {\r\n        if (!template) {\r\n            template = document.createElement('template');\r\n            template.innerHTML = `<div class=\"red-zoom\">\r\n                <div class=\"red-zoom__overlay\"></div>\r\n                <div class=\"red-zoom__frame\">\r\n                    <div class=\"red-zoom__frame-body\"></div>\r\n                </div>\r\n                <div class=\"red-zoom__lens\">\r\n                    <div class=\"red-zoom__lens-body\"></div>\r\n                </div>\r\n                <div class=\"red-zoom__error\">\r\n                    <div class=\"red-zoom__error-message\"></div>\r\n                </div>\r\n            </div>`;\r\n        }\r\n        return template.content.cloneNode(true).firstChild;\r\n    };\r\n};\r\nconst makeTemplate = (ɵ0)();\r\nclass RedZoomTemplate {\r\n    constructor() {\r\n        this._status = null;\r\n        this.appliedClasses = [];\r\n        this.onTransitionEnd = (event) => {\r\n            if (event.propertyName === 'visibility' && this.isHidden) {\r\n                this.template.remove();\r\n            }\r\n        };\r\n        this.template = makeTemplate();\r\n        this.lens = this.template.querySelector('.red-zoom__lens');\r\n        this.lensBody = this.template.querySelector('.red-zoom__lens-body');\r\n        this.frame = this.template.querySelector('.red-zoom__frame');\r\n        this.frameBody = this.template.querySelector('.red-zoom__frame-body');\r\n        this.error = this.template.querySelector('.red-zoom__error');\r\n        this.errorMessage = this.template.querySelector('.red-zoom__error-message');\r\n        this.template.addEventListener('transitionend', this.onTransitionEnd);\r\n        this.status = 'loading';\r\n    }\r\n    set status(state) {\r\n        if (this._status !== null) {\r\n            this.template.classList.remove(`red-zoom--status--${this._status}`);\r\n        }\r\n        this._status = state;\r\n        this.template.classList.add(`red-zoom--status--${state}`);\r\n    }\r\n    get status() {\r\n        return this._status;\r\n    }\r\n    set classes(classes) {\r\n        this.template.classList.remove(...this.appliedClasses);\r\n        classes = classes.trim();\r\n        if (classes) {\r\n            this.appliedClasses = classes.replace(/ +/, ' ').split(' ');\r\n            this.template.classList.add(...this.appliedClasses);\r\n        }\r\n    }\r\n    get isHidden() {\r\n        return getComputedStyle(this.template).visibility === 'hidden';\r\n    }\r\n    setProperties(properties) {\r\n        for (let name in properties) {\r\n            this.template.style.setProperty(name, properties[name]);\r\n        }\r\n    }\r\n    detach() {\r\n        this.template.classList.remove('red-zoom--active');\r\n        if (this.isHidden) {\r\n            this.template.remove();\r\n        }\r\n    }\r\n    attach() {\r\n        if (this.template.parentNode !== document.body) {\r\n            document.body.appendChild(this.template);\r\n        }\r\n    }\r\n    activate() {\r\n        this.template.classList.add('red-zoom--active');\r\n    }\r\n}\n\nclass RedZoomImage {\r\n    constructor(element = null, listener = () => { }, className = null) {\r\n        this.element = element;\r\n        this.listener = listener;\r\n        this.loading = false;\r\n        this.isFirst = true;\r\n        if (element === null) {\r\n            this.element = document.createElement('img');\r\n        }\r\n        const _listener = () => {\r\n            if (this.status !== 'loading') {\r\n                this.isFirst = false;\r\n            }\r\n            this.listener();\r\n        };\r\n        this.element.addEventListener('load', _listener);\r\n        this.element.addEventListener('error', _listener);\r\n        this.destroy = () => {\r\n            this.element.removeEventListener('load', _listener);\r\n            this.element.removeEventListener('error', _listener);\r\n        };\r\n        if (className !== null) {\r\n            this.element.classList.add(className);\r\n        }\r\n    }\r\n    get width() {\r\n        return this.element.width;\r\n    }\r\n    get height() {\r\n        return this.element.height;\r\n    }\r\n    get size() {\r\n        return { x: this.width, y: this.height };\r\n    }\r\n    get naturalWidth() {\r\n        return this.element.naturalWidth;\r\n    }\r\n    get naturalHeight() {\r\n        return this.element.naturalHeight;\r\n    }\r\n    get naturalSize() {\r\n        return { x: this.naturalWidth, y: this.naturalHeight };\r\n    }\r\n    get style() {\r\n        return this.element.style;\r\n    }\r\n    set styleSize(value) {\r\n        this.element.style.width = value.x;\r\n        this.element.style.height = value.y;\r\n    }\r\n    get status() {\r\n        if (this.loading) {\r\n            return 'loading';\r\n        }\r\n        if (this.element.complete) {\r\n            if (!this.element.src) {\r\n                return 'loading';\r\n            }\r\n            else if (this.naturalWidth === 0) {\r\n                return 'error';\r\n            }\r\n            return 'loaded';\r\n        }\r\n        return 'loading';\r\n    }\r\n    set src(value) {\r\n        this.loading = false;\r\n        this.element.setAttribute('src', value);\r\n    }\r\n    reset() {\r\n        this.loading = true;\r\n        this.listener();\r\n    }\r\n}\n\nfunction calc(a, op, b) {\r\n    switch (op) {\r\n        case '+': return a + b;\r\n        case '-': return a - b;\r\n        case '*': return a * b;\r\n        case '/': return a / b;\r\n        case 'min': return Math.min(a, b);\r\n        case 'max': return Math.max(a, b);\r\n    }\r\n}\r\nfunction fromRectPos(rect) {\r\n    return { x: rect.left, y: rect.top };\r\n}\r\nfunction fromRectSize(rect) {\r\n    return { x: rect.width, y: rect.height };\r\n}\r\nfunction fromScroll() {\r\n    return { x: scrollX, y: scrollY };\r\n}\r\nfunction fromMouseEvent(event) {\r\n    return add({ x: event.clientX, y: event.clientY }, fromScroll());\r\n}\r\nfunction op(a, op, b) {\r\n    if (typeof b === 'number') {\r\n        b = { x: b, y: b };\r\n    }\r\n    return {\r\n        x: calc(a.x, op, b.x),\r\n        y: calc(a.y, op, b.y)\r\n    };\r\n}\r\nfunction add(a, b) {\r\n    return op(a, '+', b);\r\n}\r\nfunction sub(a, b) {\r\n    return op(a, '-', b);\r\n}\r\nfunction mul(a, b) {\r\n    return op(a, '*', b);\r\n}\r\nfunction div(a, b) {\r\n    return op(a, '/', b);\r\n}\r\nfunction min(a, b) {\r\n    return op(a, 'min', b);\r\n}\r\nfunction max(a, b) {\r\n    return op(a, 'max', b);\r\n}\r\nfunction round(a) {\r\n    return map(a, Math.round);\r\n}\r\nfunction map(a, fn) {\r\n    return { x: fn(a.x, 'x'), y: fn(a.y, 'y') };\r\n}\r\nfunction equal(a, b) {\r\n    if (typeof b === 'number') {\r\n        b = { x: b, y: b };\r\n    }\r\n    return {\r\n        x: a.x === b.x,\r\n        y: a.y === b.y,\r\n    };\r\n}\r\nfunction notEqual(a, b) {\r\n    return { x: a.x !== b.x, y: a.y !== b.y };\r\n}\r\nfunction flatMax(a) {\r\n    return Math.max(a.x, a.y);\r\n}\r\nfunction flatMin(a) {\r\n    return Math.min(a.x, a.y);\r\n}\r\nfunction flatOr(a) {\r\n    return a.x || a.y;\r\n}\n\nlet RedZoomDirective = class RedZoomDirective {\r\n    constructor(element, renderer, zone, platformId) {\r\n        this.element = element;\r\n        this.renderer = renderer;\r\n        this.zone = zone;\r\n        this.platformId = platformId;\r\n        this.lazy = false;\r\n        this.classes = '';\r\n        this.behavior = 'hover';\r\n        this.wheel = true;\r\n        this.errorMessage = 'An error occurred while loading the image.';\r\n        this.scaleFactor = 1;\r\n        this.requestAnimationFrameId = null;\r\n        this.unlisten = () => { };\r\n        this.onImageChangeStatus = (() => {\r\n            let previousStatus;\r\n            return () => {\r\n                if (previousStatus === this.status) {\r\n                    return;\r\n                }\r\n                previousStatus = this.status;\r\n                this.onImageChangeStatusDistinct();\r\n            };\r\n        })();\r\n        this.onImageChangeStatusDistinct = () => {\r\n            this.template.status = this.status;\r\n            if (this.status === 'loaded') {\r\n                this.template.setProperties({\r\n                    '--red-zoom-lens-image-natural-w': `${this.lensImage.naturalWidth}px`,\r\n                    '--red-zoom-lens-image-natural-h': `${this.lensImage.naturalHeight}px`,\r\n                });\r\n                if (this.session && this.session.active) {\r\n                    this.calcScaleFactor();\r\n                    this.calcFrameSize();\r\n                    this.move();\r\n                    this.scaleFactor = this.lensImage.width / this.lensImage.naturalWidth;\r\n                }\r\n            }\r\n        };\r\n        this.mouseEnter = (event) => {\r\n            if (event.cancelable) {\r\n                event.preventDefault();\r\n            }\r\n            this.session = {\r\n                active: false,\r\n                thumbSize: null,\r\n                thumbPos: null,\r\n                lensContainerSize: null,\r\n                lensImageSize: null,\r\n                frameSize: null,\r\n                mousePos: fromMouseEvent(event),\r\n                destroy: () => { },\r\n            };\r\n            const onWheel = (wheelEvent) => {\r\n                if (!wheelEvent.cancelable || this.status !== 'loaded' || !this.wheel) {\r\n                    return;\r\n                }\r\n                wheelEvent.preventDefault();\r\n                const delta = Math.sign(wheelEvent.deltaY);\r\n                this.scaleFactor += .01 * -delta;\r\n                this.calcScaleFactor();\r\n                this.calcFrameSize();\r\n                this.onMouseMove(wheelEvent);\r\n            };\r\n            const onMove = (mouseEvent) => {\r\n                this.onMouseMove(mouseEvent);\r\n            };\r\n            const onLeave = () => {\r\n                this.session = null;\r\n                this.template.detach();\r\n                unListenMove();\r\n                unListenLeave();\r\n                unListenWheel();\r\n            };\r\n            let unListenMove;\r\n            let unListenLeave;\r\n            let unListenWheel;\r\n            if (this.behavior === 'hover') {\r\n                unListenMove = this.renderer.listen(this.element.nativeElement, 'mousemove', onMove);\r\n                unListenLeave = this.renderer.listen(this.element.nativeElement, 'mouseleave', onLeave);\r\n            }\r\n            else {\r\n                unListenMove = this.renderer.listen(document, 'mousemove', onMove);\r\n                unListenLeave = this.renderer.listen(document, 'mouseup', onLeave);\r\n            }\r\n            unListenWheel = this.renderer.listen(this.element.nativeElement, 'wheel', onWheel);\r\n            this.onMouseMove(event);\r\n            this.forceReflow();\r\n            this.template.activate();\r\n            if (this.status !== 'loaded') {\r\n                this.loadLensImage();\r\n                this.loadFrameImage();\r\n            }\r\n            this.session.destroy = onLeave;\r\n        };\r\n        this.onMouseMove = (event) => {\r\n            if (this.isImage && this.thumbImage.status !== 'loaded' && this.thumbImage.isFirst) {\r\n                return;\r\n            }\r\n            if (!this.session.active) {\r\n                this.session.active = true;\r\n                this.initSession();\r\n            }\r\n            this.session.mousePos = fromMouseEvent(event);\r\n            if (this.status === 'loaded') {\r\n                cancelAnimationFrame(this.requestAnimationFrameId);\r\n                this.requestAnimationFrameId = requestAnimationFrame(() => this.move());\r\n            }\r\n        };\r\n    }\r\n    get isImage() {\r\n        return this.element.nativeElement.tagName === 'IMG';\r\n    }\r\n    get status() {\r\n        let status = 'loaded';\r\n        const images = [this.frameImage, this.lensImage];\r\n        if (this.isImage) {\r\n            images.push(this.thumbImage);\r\n        }\r\n        for (let image of images) {\r\n            if (status === 'error' || image.status === 'error') {\r\n                status = 'error';\r\n            }\r\n            else if (status === 'loading' || image.status === 'loading') {\r\n                status = 'loading';\r\n            }\r\n        }\r\n        return status;\r\n    }\r\n    listen() {\r\n        const startEventName = {\r\n            'hover': 'mouseenter',\r\n            'grab': 'mousedown',\r\n        }[this.behavior];\r\n        this.unlisten();\r\n        this.unlisten = this.renderer.listen(this.element.nativeElement, startEventName, this.mouseEnter);\r\n    }\r\n    ngAfterContentInit() {\r\n        if (!isPlatformBrowser(this.platformId)) {\r\n            return;\r\n        }\r\n        this.zone.runOutsideAngular(() => {\r\n            this.template = new RedZoomTemplate();\r\n            this.template.classes = this.classes;\r\n            this.template.errorMessage.innerHTML = this.errorMessage;\r\n            if (this.isImage) {\r\n                this.thumbImage = new RedZoomImage(this.element.nativeElement, this.onImageChangeStatus);\r\n            }\r\n            this.frameImage = new RedZoomImage(null, this.onImageChangeStatus, 'red-zoom__frame-image');\r\n            this.lensImage = new RedZoomImage(null, this.onImageChangeStatus, 'red-zoom__lens-image');\r\n            if (!this.lazy) {\r\n                this.loadFrameImage();\r\n                this.loadLensImage();\r\n            }\r\n            this.listen();\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!isPlatformBrowser(this.platformId)) {\r\n            return;\r\n        }\r\n        if ('src' in changes && !changes.src.firstChange) {\r\n            this.onChangeThumbSrc();\r\n        }\r\n        if ('thumbSrc' in changes && !changes.thumbSrc.firstChange) {\r\n            this.onChangeThumbSrc();\r\n        }\r\n        if ('lensSrc' in changes && !changes.lensSrc.firstChange) {\r\n            this.onChangeLensSrc();\r\n        }\r\n        if ('behavior' in changes && !changes.behavior.firstChange) {\r\n            this.listen();\r\n        }\r\n        if ('classes' in changes && !changes.classes.firstChange) {\r\n            this.template.classes = this.classes;\r\n            this.invalidate();\r\n        }\r\n        if ('errorMessage' in changes && !changes.errorMessage.firstChange) {\r\n            this.template.errorMessage.innerHTML = this.errorMessage;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (!isPlatformBrowser(this.platformId)) {\r\n            return;\r\n        }\r\n        if (this.session) {\r\n            this.session.destroy();\r\n        }\r\n    }\r\n    onChangeThumbSrc() {\r\n        this.frameImage.reset();\r\n        if (!this.lazy || this.session) {\r\n            this.loadFrameImage();\r\n        }\r\n    }\r\n    onChangeLensSrc() {\r\n        this.lensImage.reset();\r\n        if (!this.lazy || this.session) {\r\n            this.loadLensImage();\r\n        }\r\n    }\r\n    getThumbSrc() {\r\n        if (!this.isImage || !this.src) {\r\n            return this.thumbSrc;\r\n        }\r\n        return this.src;\r\n    }\r\n    loadLensImage() {\r\n        if (this.lensImage.status !== 'loaded') {\r\n            this.lensImage.src = this.lensSrc;\r\n        }\r\n    }\r\n    loadFrameImage() {\r\n        if (this.frameImage.status !== 'loaded') {\r\n            this.frameImage.src = this.getThumbSrc();\r\n        }\r\n    }\r\n    initSession() {\r\n        const thumbRect = this.element.nativeElement.getBoundingClientRect();\r\n        this.session.thumbSize = fromRectSize(thumbRect);\r\n        this.session.thumbPos = add(fromRectPos(thumbRect), fromScroll());\r\n        this.template.attach();\r\n        this.template.lensBody.appendChild(this.lensImage.element);\r\n        this.template.frameBody.appendChild(this.frameImage.element);\r\n        this.template.setProperties({\r\n            '--red-zoom-thumb-x': `${this.session.thumbPos.x}px`,\r\n            '--red-zoom-thumb-y': `${this.session.thumbPos.y}px`,\r\n            '--red-zoom-thumb-w': `${this.session.thumbSize.x}px`,\r\n            '--red-zoom-thumb-h': `${this.session.thumbSize.y}px`,\r\n            '--red-zoom-thumb-size-max': `${flatMax(this.session.thumbSize)}px`,\r\n            '--red-zoom-thumb-size-min': `${flatMin(this.session.thumbSize)}px`,\r\n        });\r\n        if (this.status === 'loaded') {\r\n            this.calcScaleFactor();\r\n            this.calcFrameSize();\r\n            this.scaleFactor = this.lensImage.width / this.lensImage.naturalWidth;\r\n        }\r\n    }\r\n    calcScaleFactor() {\r\n        const scaledSize = mul(this.lensImage.naturalSize, this.scaleFactor);\r\n        this.lensImage.styleSize = map(scaledSize, c => `${c}px`);\r\n        const scaleFactorIsLimited = flatOr(notEqual(this.lensImage.size, round(scaledSize)));\r\n        if (scaleFactorIsLimited) {\r\n            this.scaleFactor = flatMax(div(this.lensImage.size, this.lensImage.naturalSize));\r\n            this.lensImage.styleSize = map(mul(this.lensImage.naturalSize, this.scaleFactor), c => `${c}px`);\r\n        }\r\n    }\r\n    calcFrameSize() {\r\n        this.session.lensContainerSize = fromRectSize(this.template.lensBody.getBoundingClientRect());\r\n        this.session.lensImageSize = fromRectSize(this.lensImage.element.getBoundingClientRect());\r\n        this.session.frameSize = min(this.session.thumbSize, round(mul(this.session.thumbSize, div(this.session.lensContainerSize, this.session.lensImageSize))));\r\n        this.template.setProperties({\r\n            '--red-zoom-frame-w': `${this.session.frameSize.x}px`,\r\n            '--red-zoom-frame-h': `${this.session.frameSize.y}px`,\r\n        });\r\n    }\r\n    move() {\r\n        if (!this.session || !this.session.active) {\r\n            return;\r\n        }\r\n        const { mousePos, thumbSize, thumbPos, frameSize, lensContainerSize, lensImageSize } = this.session;\r\n        this.template.setProperties({\r\n            '--red-zoom-mouse-x': `${mousePos.x}px`,\r\n            '--red-zoom-mouse-y': `${mousePos.y}px`,\r\n        });\r\n        const framePos = sub(mousePos, div(frameSize, 2));\r\n        const frameLimitedPos = min(max(framePos, thumbPos), sub(add(thumbPos, thumbSize), frameSize));\r\n        const frameImagePos = sub(thumbPos, round(frameLimitedPos));\r\n        this.template.setProperties({\r\n            '--red-zoom-frame-x': `${Math.round(frameLimitedPos.x)}px`,\r\n            '--red-zoom-frame-y': `${Math.round(frameLimitedPos.y)}px`,\r\n            '--red-zoom-frame-image-x': `${Math.round(frameImagePos.x)}px`,\r\n            '--red-zoom-frame-image-y': `${Math.round(frameImagePos.y)}px`,\r\n        });\r\n        const frameRelativePos = map(sub(thumbSize, frameSize), (value, axis) => {\r\n            return value === 0 ? 0 : (frameLimitedPos[axis] - thumbPos[axis]) / value;\r\n        });\r\n        const lensImagePos = mul(frameRelativePos, sub(lensImageSize, lensContainerSize));\r\n        const lensImageCenterOffset = max(div(sub(lensContainerSize, lensImageSize), 2), 0);\r\n        const lensImageFrameOffset = mul(div(sub(framePos, frameLimitedPos), div(frameSize, 2)), div(lensContainerSize, 2));\r\n        this.template.setProperties({\r\n            '--red-zoom-lens-image-base-x': `${-lensImagePos.x}px`,\r\n            '--red-zoom-lens-image-base-y': `${-lensImagePos.y}px`,\r\n            '--red-zoom-lens-image-center-offset-x': `${lensImageCenterOffset.x}px`,\r\n            '--red-zoom-lens-image-center-offset-y': `${lensImageCenterOffset.y}px`,\r\n            '--red-zoom-lens-image-frame-offset-x': `${-lensImageFrameOffset.x}px`,\r\n            '--red-zoom-lens-image-frame-offset-y': `${-lensImageFrameOffset.y}px`,\r\n        });\r\n    }\r\n    invalidate() {\r\n        if (this.session && this.session.active) {\r\n            this.initSession();\r\n            this.move();\r\n        }\r\n    }\r\n    forceReflow() {\r\n        this.element.nativeElement.getBoundingClientRect();\r\n    }\r\n};\nRedZoomDirective.ɵfac = function RedZoomDirective_Factory(t) { return new (t || RedZoomDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nRedZoomDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RedZoomDirective, selectors: [[\"\", \"redZoom\", \"\"]], hostVars: 1, hostBindings: function RedZoomDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"src\", ctx.src, ɵngcc0.ɵɵsanitizeUrlOrResourceUrl);\n    } }, inputs: { lazy: [\"redZoomLazy\", \"lazy\"], classes: [\"redZoomClass\", \"classes\"], behavior: [\"redZoomBehavior\", \"behavior\"], wheel: [\"redZoomMouseWheel\", \"wheel\"], errorMessage: [\"redZoomErrorMessage\", \"errorMessage\"], src: \"src\", lensSrc: [\"redZoom\", \"lensSrc\"], thumbSrc: [\"redZoomThumb\", \"thumbSrc\"] }, exportAs: [\"redZoom\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\r\nRedZoomDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: NgZone },\r\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\r\n__decorate([\r\n    Input('src'), HostBinding('attr.src')\r\n], RedZoomDirective.prototype, \"src\", void 0);\r\n__decorate([\r\n    Input('redZoom')\r\n], RedZoomDirective.prototype, \"lensSrc\", void 0);\r\n__decorate([\r\n    Input('redZoomThumb')\r\n], RedZoomDirective.prototype, \"thumbSrc\", void 0);\r\n__decorate([\r\n    Input('redZoomLazy')\r\n], RedZoomDirective.prototype, \"lazy\", void 0);\r\n__decorate([\r\n    Input('redZoomClass')\r\n], RedZoomDirective.prototype, \"classes\", void 0);\r\n__decorate([\r\n    Input('redZoomBehavior')\r\n], RedZoomDirective.prototype, \"behavior\", void 0);\r\n__decorate([\r\n    Input('redZoomMouseWheel')\r\n], RedZoomDirective.prototype, \"wheel\", void 0);\r\n__decorate([\r\n    Input('redZoomErrorMessage')\r\n], RedZoomDirective.prototype, \"errorMessage\", void 0);\r\nRedZoomDirective = __decorate([ __param(3, Inject(PLATFORM_ID))\r\n], RedZoomDirective);\n\nlet RedZoomModule = class RedZoomModule {\r\n};\nRedZoomModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RedZoomModule });\nRedZoomModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RedZoomModule_Factory(t) { return new (t || RedZoomModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RedZoomDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[redZoom]',\n                exportAs: 'redZoom'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { lazy: [{\n            type: Input,\n            args: ['redZoomLazy']\n        }], classes: [{\n            type: Input,\n            args: ['redZoomClass']\n        }], behavior: [{\n            type: Input,\n            args: ['redZoomBehavior']\n        }], wheel: [{\n            type: Input,\n            args: ['redZoomMouseWheel']\n        }], errorMessage: [{\n            type: Input,\n            args: ['redZoomErrorMessage']\n        }], src: [{\n            type: Input,\n            args: ['src']\n        }, {\n            type: HostBinding,\n            args: ['attr.src']\n        }], lensSrc: [{\n            type: Input,\n            args: ['redZoom']\n        }], thumbSrc: [{\n            type: Input,\n            args: ['redZoomThumb']\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RedZoomModule, { declarations: [RedZoomDirective], exports: [RedZoomDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RedZoomModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    RedZoomDirective\n                ],\n                exports: [\n                    RedZoomDirective\n                ]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-red-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { RedZoomDirective, RedZoomModule };\n\n//# sourceMappingURL=ngx-red-zoom.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\nimport * as packageJson from '../../projects/ngx-red-zoom/package.json';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    version = packageJson.version;\n    year = new Date().getFullYear();\n\n    constructor(\n        private analytics: Angulartics2GoogleAnalytics,\n    ) {}\n\n    ngOnInit(): void {\n        this.analytics.startTracking();\n    }\n}\n","<div class=\"angular-logo\">\n    <svg class=\"angular-logo__image\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100px\" height=\"90px\">\n        <path class=\"angular-logo__part-one\" d=\"M8,67L50,90L50,-0L-0,-0L8,67Z\"/>\n        <path class=\"angular-logo__part-two\" d=\"M92,67L50,90L50,-0L100,-0L92,67Z\"/>\n        <path class=\"angular-logo__letter\" d=\"M80,61.750 L52.660,-0 L47.340,-0 L20,61.750 C19.530,62.810 20.300,64 21.460,64 L29.610,64 C30.450,64 31.190,63.480 31.490,62.700 L36.760,48.650 C36.900,48.260 37.280,48 37.690,48 L62.410,48 C62.830,48 63.210,48.260 63.350,48.650 L68.520,62.690 C68.810,63.480 69.560,64 70.390,64 L78.540,64 C79.700,64 80.470,62.810 80,61.750 ZM57.060,39 L42.940,39 C42.010,39 41.380,38.060 41.730,37.210 L48.980,19.490 C49.350,18.580 50.650,18.580 51.020,19.490 L58.270,37.210 C58.620,38.060 57.990,39 57.060,39 Z\"/>\n    </svg>\n</div>\n\n\n<div class=\"intro\">\n    <svg class=\"intro__logo logo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"248px\" height=\"39px\">\n        <path class=\"logo__part-one\" d=\"M76,38.740 L76,39 L65.500,39 C64.125,39 63,37.875 63,36.500 L63,2.500 C63,1.125 64.125,-0 65.500,-0 L73,-0 C74.020,-0 75.030,0.090 76,0.260 C84.510,1.680 91,9.080 91,18 L91,21 C91,29.920 84.510,37.320 76,38.740 ZM84,18 C84,11.925 79.075,7 73,7 L71.500,7 C70.672,7 70,7.671 70,8.500 L70,30.500 C70,31.328 70.672,32 71.500,32 L73,32 C79.075,32 84,27.075 84,21 L84,18 ZM57,39 L37,39 L34,39 C32.895,39 32,38.104 32,37 L32,2 C32,0.895 32.895,-0 34,-0 L37,-0 L57,-0 C58.104,-0 59,0.895 59,2 L59,5 C59,6.105 58.104,7 57,7 L39,7 L39,15 L54,15 C55.104,15 56,15.895 56,17 L56,20 C56,21.104 55.104,22 54,22 L39,22 L39,32 L57,32 C58.104,32 59,32.895 59,34 L59,37 C59,38.104 58.104,39 57,39 ZM27.344,34.556 C27.774,35.299 28,36.142 28,37 C28,38.104 27.105,39 26,39 L22.984,39 C22.270,39 21.610,38.619 21.253,38 L16.630,30 L14.900,26.990 C14.770,27 14.630,27 14.500,27 L8,27 C7.448,27 7,27.448 7,28 L7,37 C7,38.100 6.100,39 5,39 L2,39 C0.900,39 -0,38.100 -0,37 L-0,2 C-0,0.900 0.900,-0 2,-0 L14.500,-0 C18.740,-0 22.520,1.950 25,5.010 C26.880,7.330 28,10.280 28,13.500 C28,16.720 26.880,19.670 25,21.990 C24.080,23.120 22.990,24.100 21.760,24.890 L24.710,30 L27.344,34.556 ZM18,8.020 C16.990,7.380 15.790,7 14.500,7 L8.500,7 C7.671,7 7,7.671 7,8.500 L7,18.500 C7,19.328 7.671,20 8.500,20 L14.500,20 C15.790,20 16.990,19.620 18,18.980 C19.800,17.820 21,15.800 21,13.500 C21,11.200 19.800,9.180 18,8.020 Z\"/>\n        <path class=\"logo__part-two\" d=\"M246,39 L243,39 C241.895,39 241,38.105 241,37 L241,14.921 C241,14.144 240.002,13.823 239.550,14.456 L232.898,23.746 C232.334,24.533 231.426,25 230.458,25 L228.542,25 C227.574,25 226.666,24.533 226.103,23.746 L219.451,14.456 C218.998,13.823 218,14.144 218,14.921 L218,37 C218,38.105 217.105,39 216,39 L213,39 C211.895,39 211,38.105 211,37 L211,2.200 C211,0.985 211.985,-0 213.200,-0 L215.458,-0 C216.426,-0 217.334,0.467 217.898,1.254 L228.687,16.333 C229.086,16.891 229.914,16.891 230.313,16.333 L241.103,1.254 C241.666,0.467 242.574,-0 243.542,-0 L245.800,-0 C247.015,-0 248,0.985 248,2.200 L248,37 C248,38.105 247.105,39 246,39 ZM187.500,39 C176.730,39 168,30.270 168,19.500 C168,8.730 176.730,-0 187.500,-0 C198.270,-0 207,8.730 207,19.500 C207,30.270 198.270,39 187.500,39 ZM187.500,7 C180.596,7 175,12.596 175,19.500 C175,26.404 180.596,32 187.500,32 C194.404,32 200,26.404 200,19.500 C200,12.596 194.404,7 187.500,7 ZM144.500,39 C133.730,39 125,30.270 125,19.500 C125,8.730 133.730,-0 144.500,-0 C155.270,-0 164,8.730 164,19.500 C164,30.270 155.270,39 144.500,39 ZM144.500,7 C137.596,7 132,12.596 132,19.500 C132,26.404 137.596,32 144.500,32 C151.404,32 157,26.404 157,19.500 C157,12.596 151.404,7 144.500,7 ZM122,39 L97,39 C95.900,39 95,38.100 95,37 L95,33.404 C95,32.495 95.310,31.613 95.878,30.904 L114.369,7.812 C114.632,7.485 114.398,7 113.979,7 L97,7 C95.900,7 95,6.100 95,5 L95,2 C95,0.900 95.900,-0 97,-0 L122,-0 C123.100,-0 124,0.900 124,2 L124,5.595 C124,6.504 123.690,7.387 123.122,8.096 L104.621,31.187 C104.359,31.515 104.592,32 105.011,32 L122,32 C123.100,32 124,32.900 124,34 L124,37 C124,38.100 123.100,39 122,39 Z\"/>\n    </svg>\n    <div class=\"intro__version\">\n        <a href=\"https://github.com/scompiler/red-zoom/releases\">Version {{ version }}</a>\n    </div>\n    <div class=\"intro__text\">\n        RedZoom is a modern very easy-to-use image zoom library which made as\n        Angular directive and fully stylable via CSS/SCSS.\n    </div>\n\n    <div class=\"intro__code\">\n        <code>npm install ngx-red-zoom</code>\n    </div>\n\n<!--    <div class=\"intro__code-caption\">-->\n<!--        Click to copy-->\n<!--    </div>-->\n</div>\n\n\n<app-example-n01></app-example-n01>\n<app-example-n02></app-example-n02>\n<app-example-n03></app-example-n03>\n<app-example-n04></app-example-n04>\n<app-example-n05></app-example-n05>\n<app-example-n06></app-example-n06>\n<app-example-n07></app-example-n07>\n\n<app-documentation></app-documentation>\n\n<div class=\"copyright\">\n    Code licensed under an MIT License<br>\n    Copyright © {{ year }} <a href=\"\">Konstantin Veselovsky</a>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RedZoomModule } from 'ngx-red-zoom';\nimport { Angulartics2Module } from 'angulartics2';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ExampleN01Component } from './example-n01/example-n01.component';\nimport { ExampleN02Component } from './example-n02/example-n02.component';\nimport { ExampleN03Component } from './example-n03/example-n03.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { ExampleN04Component } from './example-n04/example-n04.component';\nimport { ExampleN05Component } from './example-n05/example-n05.component';\nimport { ExampleN06Component } from './example-n06/example-n06.component';\nimport { ExampleN07Component } from './example-n07/example-n07.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ExampleN01Component,\n        ExampleN02Component,\n        ExampleN03Component,\n        DocumentationComponent,\n        ExampleN04Component,\n        ExampleN05Component,\n        ExampleN06Component,\n        ExampleN07Component,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        RedZoomModule,\n        Angulartics2Module.forRoot(),\n        CarouselModule,\n        NoopAnimationsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-documentation',\n    templateUrl: './documentation.component.html',\n    styleUrls: ['./documentation.component.scss'],\n    host: {\n        '[class.section]': 'true'\n    }\n})\nexport class DocumentationComponent {\n    constructor() { }\n}\n","<div class=\"typography\">\r\n    <h2>Features</h2>\r\n    <ul>\r\n        <li>Responsive;</li>\r\n        <li>Support server side rendering (SSR);</li>\r\n        <li>Chrome (and others based on chrome), Safari, Firefox, Edge;</li>\r\n        <li>Customizing via CSS/SCSS;</li>\r\n        <li>Lazy loading;</li>\r\n        <li>Error Handling;</li>\r\n        <li>Support hot swap images;</li>\r\n    </ul>\r\n\r\n    <h2>API</h2>\r\n\r\n    <p>Exported as: <code>redZoom</code>.</p>\r\n\r\n    <h3>Inputs</h3>\r\n\r\n    <table>\r\n        <tbody>\r\n        <tr>\r\n            <th>redZoom</th>\r\n            <td>string</td>\r\n            <td>\r\n                The path to the full version of the image. Required. Can be empty.<br>\r\n                <hr>\r\n                <i>If left blank, the path to the full version of the image will be the same as in the <code>src</code> or <code>redZoomThumb</code> attribute. TODO: not implemented.</i>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomThumb</th>\r\n            <td>string</td>\r\n            <td>The path to the thumbnail image used in the frame. Required if the <code>src</code> attribute is missing.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomLazy</th>\r\n            <td>boolean</td>\r\n            <td>If true, the full version of the image will only start loading after the activation event (mouseenter/mousedown) is triggered. (default: false)</td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomBehavior</th>\r\n            <td>string</td>\r\n            <td>\r\n                Activation event. (default: 'hover')<br>\r\n                Possible values: <code>'hover'</code>, <code>'grab'</code>.\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomClass</th>\r\n            <td>string</td>\r\n            <td>A list of CSS classes that should be applied to the root (<code>.red-zoom</code>) element.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomMouseWheel</th>\r\n            <td>boolean</td>\r\n            <td>\r\n                Enables or disables changing the magnification factor using the mouse wheel. (default: true)\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomTouch</th>\r\n            <td>boolean</td>\r\n            <td><i>TODO: Not implemented.</i></td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomGestures</th>\r\n            <td>boolean</td>\r\n            <td><i>TODO: Not implemented.</i></td>\r\n        </tr>\r\n        <tr>\r\n            <th>redZoomErrorMessage</th>\r\n            <td>string</td>\r\n            <td>Use this attribute to provide your own error message.</td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <h2>CSS variables</h2>\r\n\r\n    <table>\r\n        <tbody>\r\n        <tr>\r\n            <th>--red-zoom-thumb-[x/y]</th>\r\n            <td>Thumbnail position relative to the page in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-thumb-[w/h]</th>\r\n            <td>Thumbnail size in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-thumb-size-[max/min]</th>\r\n            <td>Max/min size of thumbnail in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-frame-[x/y]</th>\r\n            <td>Position of the frame relative to the page in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-frame-[w/h]</th>\r\n            <td>Size of the frame in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-frame-image-[x/y]</th>\r\n            <td>Position of the frame image relative to the frame in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-lens-image-natural-[w/h]</th>\r\n            <td>Original size of lens image in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-lens-image-[x/y]</th>\r\n            <td>Lens image position relative to the lens in pixels.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-lens-image-center-offset-[x/y]</th>\r\n            <td>TODO: describe.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-lens-image-frame-offset-[x/y]</th>\r\n            <td>TODO: describe.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-scale-factor</th>\r\n            <td>TODO: Not implemented.</td>\r\n        </tr>\r\n        <tr>\r\n            <th>--red-zoom-mouse-[x/y]</th>\r\n            <td>Mouse position relative to the page in pixels.</td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n    <h2>Roadmap</h2>\r\n    <ul>\r\n        <li>Changing zoom ratio with touch gestures (pinch to zoom);</li>\r\n        <li>Support touch events;</li>\r\n        <li>Support &lt;source&gt; tag and srcset attribute;</li>\r\n        <li>Support keyboard;</li>\r\n        <li>Reflect some settings in the CSS classes of the root element;</li>\r\n        <li>Provide the ability to globally define settings;</li>\r\n        <li>Support for scrollable containers;</li>\r\n        <li>Add the ability to follow the scroll position;</li>\r\n        <li>Add \"toggle\" behavior;</li>\r\n        <li>Add the ability to customize the step of changing the zoom ratio;</li>\r\n        <li>Provide the ability to replace the template;</li>\r\n        <li>Describe how to limit the scale factor.</li>\r\n    </ul>\r\n\r\n    <h2>Changelog</h2>\r\n    <ul class=\"changelog\">\r\n        <li class=\"changelog__item\">\r\n            <div class=\"changelog__title\">May 13, 2020 — Version 0.3.0</div>\r\n\r\n            <ul class=\"changelog__list\">\r\n                <li>Updated Angular from 8.1 to 9.1.</li>\r\n            </ul>\r\n        </li>\r\n        <li class=\"changelog__item\">\r\n            <div class=\"changelog__title\">October 25, 2019 — Version 0.2.1</div>\r\n        </li>\r\n        <li class=\"changelog__item\">\r\n            <div class=\"changelog__title\">October 25, 2019 — Version 0.2.0</div>\r\n        </li>\r\n        <li class=\"changelog__item\">\r\n            <div class=\"changelog__title\">October 14, 2019 — Version 0.1.0</div>\r\n\r\n            <ul class=\"changelog__list\">\r\n                <li>Initial release.</li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-example-n01',\n    templateUrl: './example-n01.component.html',\n    styleUrls: ['./example-n01.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN01Component {\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img src=\"./assets/image-1.jpg\" alt=\"\" width=\"320\" redZoom=\"./assets/image-1-full.jpg\" redZoomClass=\"red-zoom--style--window\" [redZoomLazy]=\"true\" class=\"zoom\">\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Getting Started</h2>\n\n            <ol>\n                <li>\n                    To install RedZoom, run the command below:\n                    <pre><code>npm install ngx-red-zoom</code></pre>\n                </li>\n                <li>\n                    Import module:\n                    <pre><code>import {{ '{' }} RedZoomModule } from 'ngx-red-zoom';\n\n@NgModule({{ '{' }}\n    imports: [\n        RedZoomModule\n    ]\n})\nexport class AppModule {{ '{' }} }</code></pre>\n                </li>\n                <li>\n                    Import styles:\n                    <pre><code>@import '~ngx-red-zoom/styles/base.scss';\n@import '~ngx-red-zoom/styles/style-window.scss';</code></pre>\n                </li>\n                <li>\n                    Add directive to your image tag:\n                    <pre><code>&lt;img\n    src=\"example.jpg\"\n    redZoom=\"example.full.jpg\"\n    redZoomClass=\"red-zoom--style--window\"\n&gt;</code></pre>\n                </li>\n            </ol>\n        </div>\n    </div>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-example-n02',\n    templateUrl: './example-n02.component.html',\n    styleUrls: ['./example-n02.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN02Component {\n    mode: FormControl = new FormControl('square');\n\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img src=\"./assets/image-2.jpg\" alt=\"\" width=\"320\" redZoom=\"./assets/image-2-full.jpg\" redZoomClass=\"red-zoom--style--window red-zoom--mode--{{ mode.value }}\" [redZoomLazy]=\"false\" class=\"zoom\">\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Size And Position Of The Lens</h2>\n\n            <p>\n                You can set any size of the lens image via CSS/SCSS, red-zoom automatically detect it,\n                and you do not need to edit ts/html files for this purpose.\n                This also means that you can set different sizes of the lens depend on screen size using CSS media queries.\n            </p>\n\n            <div class=\"button-group\">\n                <label>\n                    <input type=\"radio\" [formControl]=\"mode\" name=\"mode\" value=\"square\">\n                    <span>Square</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"mode\" name=\"mode\" value=\"landscape\">\n                    <span>Landscape</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"mode\" name=\"mode\" value=\"portrait\">\n                    <span>Portrait</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"mode\" name=\"mode\" value=\"fixed\">\n                    <span>Fixed</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"mode\" name=\"mode\" value=\"overlay\">\n                    <span>Overlay</span>\n                </label>\n            </div>\n\n            <p>\n                Use the following CSS variables to position the lens relative to the thumbnail:\n            </p>\n\n            <table>\n                <tbody>\n                <tr>\n                    <th>--red-zoom-thumb-[x/y]</th>\n                    <td>Thumbnail position relative to the page in pixels.</td>\n                </tr>\n                <tr>\n                    <th>--red-zoom-thumb-[w/h]</th>\n                    <td>Thumbnail size in pixels.</td>\n                </tr>\n                <tr>\n                    <th>--red-zoom-thumb-size-[max/min]</th>\n                    <td>Max/min size of thumbnail in pixels.</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-example-n03',\n    templateUrl: './example-n03.component.html',\n    styleUrls: ['./example-n03.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN03Component {\n    style: FormControl = new FormControl('magnifier');\n\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img\n            src=\"./assets/image-4.jpg\"\n            alt=\"\"\n            width=\"320\"\n            redZoom=\"./assets/image-4-full.jpg\"\n            [redZoomLazy]=\"false\"\n            [redZoomClass]=\"'red-zoom--style--'+style.value\"\n            class=\"zoom\">\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Customization And Styles</h2>\n\n            <div class=\"button-group\">\n                <label>\n                    <input type=\"radio\" [formControl]=\"style\" name=\"style\" value=\"magnifier\">\n                    <span>Magnifier</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"style\" name=\"style\" value=\"window\">\n                    <span>Window</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"style\" name=\"style\" value=\"overlay\">\n                    <span>Overlay</span>\n                </label>\n            </div>\n\n            <p>\n                RedZoom comes with three predefined styles, you can use one of them as shown below:\n            </p>\n\n            <pre><code class=\"code\"><span class=\"code__comment\">// sass</span>\n@import '~ngx-red-zoom/styles/base.scss';\n@import '~ngx-red-zoom/styles/style-<span class=\"code__mark\">{{ style.value }}</span>.scss';\n\n<span class=\"code__comment\">// html</span>\n&lt;img\n    src=\"./assets/image.jpg\"\n    redZoom=\"./assets/image-full.jpg\"\n    redZoomClass=\"red-zoom--style--<span>{{ style.value }}</span>\"\n&gt;</code></pre>\n\n            <p>\n                You can also create your own amazing style or customize an existing style using mixins:\n            </p>\n\n            <pre><code class=\"code\"><span class=\"code__comment\">// sass</span>\n@import '~ngx-red-zoom/styles/base.scss';\n@import '~ngx-red-zoom/styles/mixins/style-<span class=\"code__mark\">{{ style.value }}</span>.scss';\n\n.red-zoom--style--custom {{ '{' }}\n    @include red-zoom-style-<span class=\"code__mark\">{{ style.value }}</span>(\n        // you settings here\n    );\n}</code></pre>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-example-n04',\n    templateUrl: './example-n04.component.html',\n    styleUrls: ['./example-n04.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN04Component {\n    behavior: FormControl = new FormControl('hover');\n\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img\n            src=\"./assets/image-3.jpg\"\n            alt=\"\"\n            width=\"320\"\n            redZoom=\"./assets/image-3-full.jpg\"\n            [redZoomLazy]=\"false\"\n            redZoomClass=\"red-zoom--style--window\"\n            [redZoomBehavior]=\"behavior.value\"\n            [style.cursor]=\"behavior.value == 'hover' ? 'crosshair' : 'zoom-in'\"\n            class=\"zoom\">\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Behavior And Activation Event</h2>\n\n            <div class=\"button-group\">\n                <label>\n                    <input type=\"radio\" [formControl]=\"behavior\" name=\"behavior\" value=\"hover\">\n                    <span>Hover</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"behavior\" name=\"behavior\" value=\"grab\">\n                    <span>Grab</span>\n                </label>\n            </div>\n\n            <p>\n                Choose your desired behavior:\n            </p>\n\n            <pre><code>&lt;img\n    src=\"image.jpg\"\n    redZoom=\"image-full.jpg\"\n    redZoomBehavior=\"{{ behavior.value }}\"\n&gt;</code></pre>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-example-n05',\n    templateUrl: './example-n05.component.html',\n    styleUrls: ['./example-n05.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN05Component {\n    url: FormControl = new FormControl('incorrect');\n\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img\n            src=\"./assets/image-5.jpg\"\n            alt=\"\"\n            width=\"320\"\n            [redZoom]=\"url.value === 'correct' ? './assets/image-5-full.jpg' : './assets/404.jpg'\"\n            redZoomClass=\"red-zoom--style--window\"\n            [redZoomLazy]=\"true\"\n            class=\"zoom\"\n        >\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Error Handling</h2>\n\n            <div class=\"button-group\">\n                <label>\n                    <input type=\"radio\" [formControl]=\"url\" name=\"error\" value=\"incorrect\">\n                    <span>Incorrect URL</span>\n                </label>\n                <label>\n                    <input type=\"radio\" [formControl]=\"url\" name=\"error\" value=\"correct\">\n                    <span>Correct URL</span>\n                </label>\n            </div>\n\n            <p>\n                If an error occurs while loading the image, RedZoom will display a corresponding error message.\n                You can also provide your own error message:\n            </p>\n\n            <pre><code>&lt;img\n    src=\"image.jpg\"\n    redZoom=\"{{ url.value === 'correct' ? 'image-full.jpg' : '404.jpg' }}\"\n    redZoomErrorMessage=\"Custom error message\"\n&gt;</code></pre>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'app-example-n06',\n    templateUrl: './example-n06.component.html',\n    styleUrls: ['./example-n06.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN06Component {\n    images = [\n        {thumbnail: './assets/image-6.jpg', full: './assets/image-6-full.jpg'},\n        {thumbnail: './assets/image-7.jpg', full: './assets/image-7-full.jpg'},\n        {thumbnail: './assets/image-8.jpg', full: './assets/image-8-full.jpg'},\n    ];\n    currentImage: FormControl = new FormControl(this.images[0]);\n\n    constructor() { }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\">\n        <img [src]=\"currentImage.value.thumbnail\" alt=\"\" width=\"320\" [redZoom]=\"currentImage.value.full\" redZoomClass=\"red-zoom--style--window\" [redZoomLazy]=\"true\" class=\"zoom\">\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Gallery</h2>\n\n            <div class=\"radio-image\">\n                <label *ngFor=\"let image of images\">\n                    <input type=\"radio\" [formControl]=\"currentImage\" name=\"gallery\" [value]=\"image\">\n                    <span>\n                        <img [src]=\"image.thumbnail\" alt=\"\">\n                    </span>\n                </label>\n            </div>\n\n            <p>RedZoom supports hot swap images. So you can use it in image gallery.</p>\n\n            <pre><code>// code\nconst currentImage = {{ '{' }}\n    thumbnail: '{{ currentImage.value.thumbnail }}',\n    full: '{{ currentImage.value.full }}',\n};\n\n// template\n&lt;img\n    [src]=\"currentImage.thumbnail\"\n    [redZoom]=\"currentImage.full\"\n&gt;</code></pre>\n        </div>\n    </div>\n</div>\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { RedZoomDirective } from 'ngx-red-zoom';\n\n@Component({\n    selector: 'app-example-n07',\n    templateUrl: './example-n07.component.html',\n    styleUrls: ['./example-n07.component.scss'],\n    host: {\n        '[class.example]': 'true'\n    }\n})\nexport class ExampleN07Component {\n    images = [\n        {thumbnail: './assets/image-9.jpg', full: './assets/image-9-full.jpg'},\n        {thumbnail: './assets/image-10.jpg', full: './assets/image-10-full.jpg'},\n        {thumbnail: './assets/image-11.jpg', full: './assets/image-11-full.jpg'},\n    ];\n\n    currentImage = this.images[0];\n\n    options = {\n        items: 1,\n    };\n\n    @ViewChild(RedZoomDirective) redZoom: RedZoomDirective;\n\n    get classes(): string {\n        return 'red-zoom--style--window' + (this.dragging ? ' red-zoom--disabled' : '');\n    }\n\n    dragging = false;\n\n    constructor(private cd: ChangeDetectorRef) { }\n\n    dragged(data): void {\n        this.dragging = data.dragging;\n        this.cd.detectChanges();\n    }\n\n    translated(data): void {\n        this.currentImage = this.images[data.startPosition];\n    }\n}\n","<div class=\"example__body\">\n    <div class=\"example__image\" [redZoom]=\"currentImage.full\" [redZoomThumb]=\"currentImage.thumbnail\" [redZoomClass]=\"classes\" [redZoomLazy]=\"true\" #redZoom=\"redZoom\">\n        <owl-carousel-o [options]=\"options\" (dragging)=\"dragged($event)\" (translated)=\"translated($event)\">\n            <ng-container *ngFor=\"let image of images\">\n                <ng-template carouselSlide>\n                    <img [src]=\"image.thumbnail\" alt=\"\" width=\"320\" class=\"zoom\">\n                </ng-template>\n            </ng-container>\n        </owl-carousel-o>\n    </div>\n    <div class=\"example__content\">\n        <div class=\"typography\">\n            <h2>Carousel</h2>\n            <p>\n                You can also use the redZoom directive, for example with a DIV tag.\n                This ability is useful when your images are in a carousel, and they can change their position when swiping.\n            </p>\n            <pre><code>&lt;div\n    [redZoom]=\"currentImage.full\"\n    [redZoomThumb]=\"currentImage.thumbnail\"\n&gt;\n    &lt;owl-carousel-o&gt;\n        &lt;ng-container *ngFor=\"let image of images\"&gt;\n            &lt;ng-template carouselSlide&gt;\n                &lt;img [src]=\"image.thumbnail\"&gt;\n            &lt;/ng-template&gt;\n        &lt;/ng-container&gt;\n    &lt;/owl-carousel-o&gt;\n&lt;/div&gt;</code></pre>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}